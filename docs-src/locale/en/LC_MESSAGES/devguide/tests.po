# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Dalton Barreto
# This file is distributed under the same license as the Asyncworker
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Asyncworker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-02 14:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../devguide/tests.rst:2
msgid "Escrevendo Testes Unitários"
msgstr ""

#: ../../devguide/tests.rst:5
msgid ""
"Por causa :ref:`da incompatibilidade com múltiplos loops <incompat>` para"
" escrever testes você precisa ter certeza que seu test runner não está "
"criando novos loops para cada um dos casos de teste sendo rodados. Por "
"padrão o `asynctest <https://github.com/Martiusweb/asynctest>`_ faz isso."
" No caso do asynctest, basta adicionar um atributo ``use_default_loop = "
"True`` (doc `aqui "
"<https://asynctest.readthedocs.io/en/latest/asynctest.case.html#asynctest.TestCase.use_default_loop>`_)"
" em sua classe de teste."
msgstr ""

#: ../../devguide/tests.rst:9
msgid "Usando um HTTP test client para testar rotas HTTP"
msgstr ""

#: ../../devguide/tests.rst:11
msgid ""
"Quando estamos testando uma app HTTP é bem útil podermos fazer uma "
"requisição real paa rotas dessa app. Para isso o asyncworker dispõe de um"
" TestClient."
msgstr ""

#: ../../devguide/tests.rst:14
msgid "Instanciando com ContextManager"
msgstr ""

#: ../../devguide/tests.rst:16
msgid ""
"Esse TestClient recebe como parametro a instância de sua :py:class:`App "
"<asyncworker.app.App>`, que é onde estão definidas as rotas. Esse "
"TestClient é conseguido através de um contextmanager, usando a classe "
":py:class:`asyncworker.testing.HttpClientContext`."
msgstr ""

#: ../../devguide/tests.rst:36
msgid ""
"essa forma é útil quando você precisa testar características que podem "
"ser comprovadas em qualquer app asyncworker e por isso você declara uma "
"nova app em cada caso de teste."
msgstr ""

#: ../../devguide/tests.rst:39
msgid "Instanciando com decorator"
msgstr ""

#: ../../devguide/tests.rst:41
msgid ""
"Se você estiver testando uma app principal que já está toda declaradad e "
"não precisará mudar durante os testes é possível decorar seus casos de "
"teste com :py:func:`asyncworker.testing.http_client`."
msgstr ""

