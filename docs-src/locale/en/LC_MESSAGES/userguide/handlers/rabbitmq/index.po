# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Dalton Barreto
# This file is distributed under the same license as the Asyncworker
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Asyncworker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-02 14:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../userguide/handlers/rabbitmq/index.rst:2
msgid "RabbitMQ"
msgstr ""

#: ../../userguide/handlers/rabbitmq/index.rst:4
msgid ""
"Aqui você verá como escrever um handler que recebe mensagens de um broker"
" RabbitMQ"
msgstr ""

#: ../../userguide/handlers/rabbitmq/index.rst:7
msgid ""
"Todo handler desse tipo recebe o mesmo parametro, que é uma lista de "
"objetos :py:class:`asyncworker.rabbitmq.message.RabbitMQMessage`."
msgstr ""

#: ../../userguide/handlers/rabbitmq/index.rst:10
msgid ""
"Isso significa que a assinatura dos seus handlers são fixas, ou seja, "
"todos eles possuem essa assinatura:"
msgstr ""

#: ../../userguide/handlers/rabbitmq/index.rst:21
msgid ""
"Como no caso de handlers RabitMQ é preciso ter uma conexão prévia com o "
"servidor de filas, precisamos criar uma instância de "
":py:class:`asyncworker.connections.AMQPConnection`. Essa instância deve "
"ser passada no momento da criação de sua :ref:`Asyncworker App "
"<asyncworker-app>`."
msgstr ""

#: ../../userguide/handlers/rabbitmq/index.rst:23
msgid ""
"Essa instância de conexão pode também ser usada dentro do handler, caso "
"necessário."
msgstr ""

#: ../../userguide/handlers/rabbitmq/index.rst:26
msgid ""
"Um exemplo disso é quando precisamos de um handler que lê mensagens de um"
" fila e publica em outra. Esse exemplo pode ser escrito assim:"
msgstr ""

#: ../../userguide/handlers/rabbitmq/index.rst:55
msgid ""
"se a fila de destino estiver um outro virtual host, basta pegar uma nova "
"conexão com esse virtual host acessando o atributo (dict like) com o nome"
" do virtual host desejado, no objeto da conexão, assim:"
msgstr ""

