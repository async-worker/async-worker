# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Dalton Barreto
# This file is distributed under the same license as the Asyncworker
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Asyncworker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-02 14:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../changelog/v0.11.5.rst:4
msgid "0.11.5"
msgstr ""

#: ../../changelog/v0.11.5.rst:7
msgid "Data de release: 2020-03-01"
msgstr ""

#: ../../changelog/v0.11.5.rst:9
msgid ""
"Tag: `0.11.5 <https://github.com/async-worker/async-"
"worker/releases/tag/0.11.5>`_"
msgstr ""

#: ../../changelog/v0.11.5.rst:11
msgid ""
"`PR 163 <https://github.com/async-worker/async-worker/pull/163>`_ "
"Feature/fix build on py38"
msgstr ""

#: ../../changelog/v0.11.5.rst:12
msgid ""
"`PR 164 <https://github.com/async-worker/async-worker/pull/164>`_ "
"Feature/named parameteres on types registry"
msgstr ""

#: ../../changelog/v0.11.5.rst:13
msgid ""
"`PR 165 <https://github.com/async-worker/async-worker/pull/165>`_ "
"Implementação de um RequestWrapper"
msgstr ""

#: ../../changelog/v0.11.5.rst:14
msgid ""
"`PR 166 <https://github.com/async-worker/async-worker/pull/166>`_ "
"Tentativa de adicionar o report do codeclimate"
msgstr ""

#: ../../changelog/v0.11.5.rst:15
msgid ""
"`PR 167 <https://github.com/async-worker/async-worker/pull/167>`_ "
"Feature/code climate badges"
msgstr ""

#: ../../changelog/v0.11.5.rst:16
msgid ""
"`PR 168 <https://github.com/async-worker/async-worker/pull/168>`_ "
"Adicionando .gitattributes"
msgstr ""

#: ../../changelog/v0.11.5.rst:17
msgid ""
"`PR 171 <https://github.com/async-worker/async-worker/pull/171>`_ "
"Adicionando classifier \"Programming Language :: Python :: 3.8\""
msgstr ""

#: ../../changelog/v0.11.5.rst:18
msgid ""
"`PR 172 <https://github.com/async-worker/async-worker/pull/172>`_ "
"Explicação sobre como mantemos as versões do asyncworker"
msgstr ""

#: ../../changelog/v0.11.5.rst:19
msgid ""
"`PR 174 <https://github.com/async-worker/async-worker/pull/174>`_ "
"Feature/update code to use request wrapper"
msgstr ""

#: ../../changelog/v0.11.5.rst:21
msgid ""
"Raw Commits: `0.11.5 <https://github.com/async-worker/async-"
"worker/compare/0.11.4...0.11.5>`_"
msgstr ""

#: ../../changelog/v0.11.5.rst:25
msgid "Notas de atualização"
msgstr ""

#: ../../changelog/v0.11.5.rst:27
msgid ""
"Nessa versão, as implementações de decorators customizados passam a "
"receber uma instância de "
":py:class:`asyncworker.http.wrapper.RequestWrapper` e não mais o Request "
"do aiohttp. A chamada a esses decorators ainda funciona recebendo "
"``aiohttp.web.Request`` mas é considerada depreciada e será removida no "
"futuro."
msgstr ""

#: ../../changelog/v0.11.5.rst:30
msgid ""
"A recomendação é que você primeiro atualize para essa versão e ajuste "
"todos os seus handlers e decorators de handlers para passarem a receber "
":py:class:`asyncworker.http.wrapper.RequestWrapper`. Fazendo isso seu "
"código já estará bem melhor preparado para futuras versões do "
"asyncworker."
msgstr ""

#: ../../changelog/v0.11.5.rst:32
msgid "Mais detalhes :ref:`custom-decorators`."
msgstr ""

